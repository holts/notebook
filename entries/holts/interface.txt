 摘要：解决和系统的接口问题的难度主要在于交换数据内容定义和接口点的确定。本文对解决这个问题提供了一套系统的方法，并将这套方法应用于一个企业实施的ERP系统和DRP系统。

    关键词：ERP，DRP，数据接口

    一、 引言

    随着我国企业信息化的发展，很多企业购买和实施了国外的大型企业管理软件包，ORACLE公司和SAP公司的ERP软件产品占有了其中很大份额。这些软件大都采用数据集中的Internet架构，所有用户通过网络访问应用层和数据库。Internet架构下的数据集中方式，避免了多个数据中心引起的数据维护和同步引起的系统复杂性上升，使企业可以在一个数据中心甚至一个数据库用例的支持下完成全国或者全球运作。
    但是这些软件在国内企业实施过程中都遇到了这样一个问题：对于有很多跨地区销售分支机构的企业，各分支机构需要申请和使用专线，同时造成系统用户数成倍增加，从而使系统运行费用和软件购买费用成倍增加。
    有些企业采用了ERP系统只控制集团，分销机构的定单传真到集团后手工录入到ERP系统的方式解决以上问题，使ERP系统失去了对二级以下批发商和零售商的管理功能，分销机构的库存、销售、客户信息等数据无法进入系统。还有些企业开发了用于专门管理分销机构的软件，即分销资源计划（DRP）系统，但是随之出现了两个系统的接口问题。有些企业由于无法解决接口问题，造成运行效率低下、成本上升、数据不一致等问题。
    笔者参与了一家企业的ORACLE ERP系统和分销资源计划系统（DRP）的实施，并负责解决两个系统之间的数据接口问题。
    这家企业购买了ORACLE公司在2001年发布企业套件ORACLE APPLICATION 11i，数据库采用ORACLE 8.1.6，服务器采用一台SUN 3500，操作系统采用SUN SOLARISE。在实施中采用总体设计、分步实施的方法，一期实施总部和总部所在地的8个分、子公司。
    企业在全国有230个经销部遍布全国，8个工厂分布于6个省。DRP软件部分是定制开发的，数据库也采用ORACLE 8.1.6，2台单CPU的PC SERVER作为WEB服务器，2台 双CPU的PC SERVER作为数据库服务器，操作系统采用WINDOWS 2000 ADVANCED SERVER，开发平台使用J2EE。实施策略上采用先单独运行，后和ERP贯通的方法。
    企业希望两个系统能按照图一表示的方式工作

 二、接口方案设计

    解决和ERP系统的接口问题的难度主要在于交换数据内容定义和接口点的确定。ERP系统是一个很庞大的体系，ERP开发商强烈建议用户禁止直接对数据库的非读取操作，这是因为ERP软件的数据库里往往有数万个对象，彼此间的关联非常密切，直接修改表内容会引起很多意想不到的问题，并且一旦出现问题，查错和恢复非常困难。所以ERP系统一般都提供开放性接口，用于和其它系统的集成。这些接口程序还用来验证输入数据的完整性，确保符合业务规则。但并非所有 ERP系统中的实体都具有开放性接口，所以有些数据的录入只能手工进行。因此交换数据内容定义和接口点的确定成为解决问题的关键。
    参考一般MIS系统的系统接口方案设计方法，结合ORACLE ERP系统的特点，本方案设计步骤如下：

    1、系统边界定义
    理论上讲，ERP系统可以管理企业内所有的活动，DRP系统也可以完成分销业务中对所有物流、资金流、信息流的控制。但是在对接口方案的最优化处理时，必须对两个系统的职能边界、地理边界、功能边界进行定义。
    系统边界定义和接口方案设计的后续步骤紧密相联。在本方案的设计中，实际上采取了根据后续步骤的分析结果，不断调整系统边界定义的方法。

    2、交换数据内容定义
    按本文分析，接口方案的关键是交换数据内容定义和接口点的确定，并且两者是有联系的。如果接口点确定在成品入库或者成品出库，交换数据的内容和流向就不同。但是在未定义交换数据内容前，接口点更无法确定。经验证明：解决这一矛盾的最好方法是首先定义交换数据内容，然后确定接口点。如果接口点无法确定，再调整交换数据内容。

   定义交换数据内容的具体方法是：
    （1）确定系统划分边界条件和交换数据内容的静态部分。静态数据是指产成品编码、分销机构编码等信息。这部分信息相对稳定，但是并非永远不变。静态信息原则上应由由ERP系统维护。这样做的理由仍然是ERP的接口表功能限制太多。另外一些静态信息，如客户编码，应该由分销系统维护。但是由于分销系统的功能足够管理分销机构的每笔销售业务，在ERP系统中则没有必要保留这些信息，所以没有必要交换客户编码这些信息。经过对两个系统的所有实体的列表后的认真分析，确定交换数据内容的静态部分的内容有产成品编码、组织机构编码、产成品定价等。 


    （2）确定交换数据内容的动态部分。动态数据指总部和分销机构业务发生时显示数量、日期、金额的部分，如库存、采购单、出入库单、货物发运和接收明细等。在系统边界确定的情况下，经过认真分析，确定交换数据内容的动态部分的内容有定单、客户信息、回款信息、收货情况、退货情况、发货情况、收款情况、工厂库存等。

    3.确定接口点
    接口点组成两个系统的边界。边界由多个接口点组成。对每个接口点数据交换点量的确定原则是首先分析交换数据的大小，单位按行计算。具体方法如下。

    通过这种方法，本方案确定了所有接口点。接口点的位置实际上已经隐含在可由交换数据的动态部分和静态部分的内容中。

    4．硬件方案
    采用一台PC SERVER作为接口服务器，配置两个3COM公司生产的网卡分别连接ERP和DRP系统。

    5．软件方案
    接口服务器采用WINDOWS 2000 SERVER作为操作系统，可以通过IE 5.0登录到两个系统。由于两个系统都采用ORACLE 8.1.6数据库，接口服务器也安装同类数据库，通过ORACLE NET 8和两个系统的数据库连接。ERP系统的DBA对接口服务器管理员赋予只读权限。
    接口服务器安装DELPHI 5.5 ENTERPRICE用于接口软件的开发。

    6．接口服务器初始化
    在系统接口服务器开始工作前，首先对系统进行了初始化。在接口服务器开始工作以后，需要交换的ERP系统中的静态数据一旦发生变化，初始化工作就要重新进行，所以接口服务器上开发了专用的初始化程序。初始化工作结束后，两个系统的静态数据完全保持一致。

    7.系统接口服务器管理员工作制度
    系统接口服务器按管理员设定的时间自动定时读取两个系统中需要交换的数据。读取DRP系统数据的频率为每次间隔30分钟，读取ERP系统的频率为每次间隔 60分钟。每次获得数据后，管理员访问DRP系统数据库，把从ERP系统中读取的数据写入；同时把需要写入ORACLE ERP系统的数据按系统要求的INTERFACE TABLE格式生成相应EXECLE表格，通过DATALOADER输入到ERP系统。DATALOADER是ORACLE提供的模拟键盘录入工具。在输入过程中有时会有意外出现，所以还需要人工监督以提高输入效率。还有一部分数据，如大客户信息，由于数据量较小，仍以纯手工方式录入ERP系统。
    接口服务器开始工作以后，每次交换的数据在处理完毕后保存为历史记录，作为在数据发生错误时确定事故责任的依据。

    8.确定过渡阶段数据处理方式
    由于两个系统实施范围的不同步，系统间接口必然涉及DRP系统单独运行和ERP系统部分运行两个过渡阶段的接口方法。
    在DRP系统单独运行阶段，接口方式完全采用人工录入的方法。由于这个时候上线的分销机构只有5个，数据量不大，而且可以从中总结出一些提高效率的方法，作为确定接口方案的依据。
    在接口服务器开始工作后，ERP系统只是在部分工厂上线。对于没有上线的工厂，仍采用传真方式或电子邮件进行信息传递。只是传真使用新的格式，包含ERP 系统和DRP系统所需要的各项数据。例如原本需要从ERP系统中读取的产成品库存数据，在过渡阶段采用各个工厂每天填写《产成品库存表》，然后由接口服务器管理员负责把数据录入两个系统。

    9.接口方案的软件实现
    在以上步骤全部完成后，需要在对两个系统不做任何改动的前提下，在不影响两个系统正常工作的原则下，把接口方案中的软件功能在接口服务器上实现出来。由于本方案时在局域网内完成数据接口，所以采用适合开发C/S结构系统的开发工具DELPHI 5.5 ENTERPRICE。开发步骤如下：
    （1） 首先建立起接口服务器和两个系统的数据库的连接，并在数据库引擎BDE中分别命名为ERP和DRP的数据库别名；
    （2） 然后开发定时读取数据的任务列表程序，并把读取结果和出错信息写入接口服务器的数据库，由管理员完成自动或手动的数据交换。其数据流向如上所示。
    （3） 系统出错信息及优化处理。在系统开发过程中对频繁访问数据库经常容易发生的系统故障进行有效的处理。

    三、本接口方案实现和应用情况

    本接口方案在开始工作以后，经过3个月的运行，平均每天通过DATALOADER向ERP系统录入500行定单，出错率从80%逐步下降到2%。出错原因在于ERP系统对接口表中的数据验证要求非常高。解决的方法时找出原因，在DRP系统中增加对有关数据的验证要求，确保读入到接口服务器的数据满足导入条件。由于这家企业的成品偏大，交换一次库存数据耗时较长，库存产成品库存的读取频率逐渐改为每天1次。对于输入ERP的定单不能通过ATP检查的，定单会被暂挂，处于等待发运状态。对于这类定单，利用ERP系统中定单管理模块的汇总功能打印出报表，录入到DRP系统中通知分销机构。

    四、结束语

    本文通过对ORACLE ERP系统和销售管理系统的接口方法的阐述，解决了ERP系统和DRP系统接口的关键问题，充分利用了ERP系统和DRP系统的功能，提高了企业在生产、销售、库存等方面的管理水平和运作效率。通过实际运行，本系统运行可靠，完全满足了企业运营的需要，具有显著的经济效益。




模板

摘要
	

定义

《接口名称》接口（《接口标识符》）
	

在《组件1》和《组件2》之间应该有一个清晰定义的接口（叫做《接口标识符》）。

目的：

1.         《接口目的1》。

2.         ······

接口上的交互由《发起组件》发起。

本接口的定义由《接口所有者组织》负责和拥有。

【本接口应该遵从《标准名称》的版本《标准版本》，可以在《标准的位置》找到标准的定义。】

n  【《技术陈述》】

实例

摘要
	

定义

支付清算接口（i4）
	

在系统和支付清算中心之间应该有一个清晰定义的接口（叫做i4）。它只能被系统调用。它的目的是允许客户支付一个订单。接口的所有权在系统范围内。

告警监视接口（i5）
	

在系统和外部告警监视系统之间应该有一个清晰定义的接口（叫做i5）。它只能被系统调用。接口的所有权在系统范围内。

它的目的是通知适当的人员与他们有关的任何事件（通常意味着有严重的问题）。

会计系统接口（i6）
	

在系统和外部会计系统之间应该有一个清晰定义的接口（叫做i6）。接口的所有权在系统范围内。

它的目的是由于系统内的一些活动对财务有影响，通过接口传递会计条目（或者是产生会计条目的信息）。

认证授权接口（i7）
	

在系统和认证授权系统之间应该有一个清晰定义的接口（叫做i7）。它只能被系统调用。它的目的是验证客户提交的数字证书。

它应该可能支持多个认证授权系统（例如，eSign，Baltimore）。每个认证授权系统应该规定它自己的接口（不过有一部分应该是使用PKCS#10标准——详情见http://www.rsasecurity.com/rsalabs/pkcs/pkcs-10）。

额外需求

系统间接口需求可能会有一些额外的需求，不过有时候可能都不需要。浏览下面的主题列表，看看是否有需要注意的：

1.         个别类型的交互 主接口需求陈述了接口的目的，但是你可能希望多说一些主要的交互类型。可能还应该提到一些次要交互；对每一种交互可以应用系统间交互需求模式。

2.         吞吐量 接口能够处理多少的流量？遵循流量需求模式。

3.         伸缩性 随着流量的增加，接口是否可以很好的应对？遵循伸缩性需求模式。

4.         扩展性 是否需要能够扩展额外的这种类型的接口？在本需求模式中已经提到了很多次。如果需要，参考扩展性需求模式编写合适的需求。

还有，是否需要能够开关接口？以及需要什么配置参数？扩展性需求模式中也处理这些问题。

5.         弹性和可用性 是否需要检测流量的丢失或者重复？如果出现故障接口应该需要怎样快速的恢复？在哪段钟点内接口是需要运行的？

6.         流量验证和记录 是否必须能够准确断定发出和接受了什么？是否需要证明发出和接受了一些东西？或者是否需要其他系统确认接受到了一些东西？

7.         升级 如果接口发生变化怎样处理？是否必须能够同时支持新旧两个版本。

8.         安全 接口是进入（以及退出）系统的门。对于验证访问和阻止入侵需要做到什么程度？对于接口中传递的信息是否担心陌生人看到？

9.         文档和第三方接口开发 如果你在定义接口，你将如何告诉接口另一端的系统开发人员他们需要做什么？他们如何测试他们的软件？


